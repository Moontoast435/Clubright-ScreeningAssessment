@{
    ViewData["Title"] = "Home Page";
}
<div class="row">
    <div class="col-12">
        <h1 class="display-4">ClubRight Screening Assessment</h1>
        <p>You have 90 minutes for this assessment. Please say how long and how you found it in "How did you find this assessment?".  (optional: this is your opportunity to show some flair!)</p>
    </div>

    <div class="col-4 text-start pe-5">
        <ol>
            <li class="mb-3">
                While debugging, any changes to the razor page will need to the whole application to be re-built/re-run for changes to take effect. Change the project file so that you can make UI changes without restarting.
            </li>
            <li class="mb-3">
                Create a button on the page that increments a digit on the page (this should be a server side call, not Javascript (apart from any inbuilt ajax functions))
            </li>
            <li class="mb-3">
                Create a second page which can be accessed from the nav menu, the contents of the page should be a header that says "Number of clicks" with a paragraph that says "The button was pressed X times" (replacing X for how many times the button was pressed in question 2)
            </li>
            <li class="mb-3">
                Create a button that takes a string as an input
                <ul>
                    <li>Reverse this string and output it on the page (eg "The quick brown fox" will output as "xof nworb kciuq ehT")</li>
                    <li>Reverse the words from the input string and output it on to the page (eg "The quick brown fox" will output as "fox brown quick The")</li>
                </ul>
            </li>
        </ol>
    </div>

    <div class="col">
        <div class="mb-5">
            <h3>Add your solution to question 2 here</h3>

            <p><button onclick=increment()>Increment number by 1</button></p>
            <p><span id="currentCount">1</span></p>
            
            <hr/>
        </div>

        <div class="mb-5">
            <h3>Add your solution to question 3 here</h3>
            <hr/>

            <button onclick="reversals()">Click here to do the reversals</button>
            <input id="inputText" type="text" placeholder="Enter the string to be reversed here..." style="width:500px;"/>

            <br />
            <br />

            <h3>First answer:</h3>
            <p id="reversalOne"></p>

            <br />

            <h3>Second answer:</h3>
            <p id="reversalTwo"></p>
        </div>

        <hr />

        <div class="mb-5">
            <h4>How did you find this assessment?</h4>
            @* Write here *@

            The assessment took me about 45 minutes. <br />

            I found the assessment quite enjoyable, it was straightforward, but kept me on my toes at some points.<br /><br />

            For the first question, I simply installed a NuGet package (Razor runtime compilation) and appended the call for this to the AddControllersWithViews() call that was already present on Program.cs. <br /><br />

            For the second question, I used an ajax call to pass through the integer that was currently displayed to an endpoint on the home controller. Then, it was just a matter of incrementing it by 1. <br /><br />
            
            This updated figure was then returned in the success object of the ajax call, which was then used to update the text of the current count on the page.<br /><br />

            For question three, I created a new view "Clicks". Then I created a new nav element called "Clicks". I attached a function to this element which would take the current count, and redirect to a new endpoint on the home controller Clicks. This returned the new view with the count stored in the ViewData object.<br /><br />

            However, the question asks for the number of clicks, not the current number (which started at 1 by default). So, I substracted 1 from the current count data which would represent the number of clicks. Starting the counter at 0 would render this unneccesary.<br /><br />

            Question four was a matter of deciding how to split the input string and how to join it back again. They needed to be split and joined without and with a space.<br /><br />
        </div>
    </div>
</div>

<script>
   function increment() {
        const count = Number.parseInt($("#currentCount").text());
        console.log(count);

        $.ajax({
            url: '/Home/Increment',
            type: 'POST',
            data: {currentCount: count},
            success: function(data) {
                if (data.success) {
                     $("#currentCount").text(data.updatedCount);
                     return;
                }

                 console.log("Error updating the count.");
            },
            error: function() {
                 console.log("Error updating the count.")
            }
                
        })
    }

     function reversals() {
         const inputText = $("#inputText").val();
         if (inputText == "") {
             $("#reversalOne").text("Please enter something in the input field.");
             $("#reversalTwo").text("Please enter something in the input field.");
             return;
         }

         const firstReversal = inputText.split('').reverse().join('');
         console.log(firstReversal);
        
         const secondReversal = inputText.split(' ').reverse().join(' ');
         console.log(secondReversal);

         $("#reversalOne").text(firstReversal);
         $("#reversalTwo").text(secondReversal);

    }
  

</script>
